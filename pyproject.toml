[project]
name = "yurest-fast-api"
version = "0.1.0"
description = "Custom Yurest framework"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Juan Daniel Forner Garriga", email = "jd.forner@yurest.com"}
]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "fastapi[standard]>=0.115.12",
    "typing-extensions>=4.14.0",
    "pydantic>=2.0.0",
    "injector>=0.22.0",
    "toml>=0.10.2",
    "starlette>=0.46.2",
    "colorama>=0.4.6",
    "httpx>=0.27.0",
    "grpcio>=1.73.0",
    "grpcio-tools>=1.73.0",
    "protobuf>=6.31.1",
    "aiokafka>=0.12.0",
    "kafka-python>=2.0.2",
    "orjson>=3.10.12",
]

[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "app"}

[tool.setuptools.packages.find]
where = ["app"]
namespaces = true 

[tool.coverage.run]
branch = true
source = ["app"] 

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "ruff>=0.8.0",
    "black>=24.0.0",
    "pre-commit>=4.0.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "httpx>=0.27.0",
]

[tool.ruff]
target-version = "py313"
line-length = 88
src = ["app"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E501"]  # line too long (black se encarga)

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"
